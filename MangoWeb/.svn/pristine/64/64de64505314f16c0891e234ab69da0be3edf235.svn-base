<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:mx="library://ns.adobe.com/flex/mx" width="300" height="150" creationComplete="init()" title="文件上传" showCloseButton="true" close="PopUpManager.removePopUp(this)" >
	
	<fx:Metadata>		       
		[Event(name='loadDataSuccessful',type='smartx.flex.components.event.BasicEvent')]
	</fx:Metadata>
	
	<fx:Script>   
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			
			import smartx.flex.components.assets.AssetsFileLib;
			import smartx.flex.components.basic.ClientEnviorment;
			import smartx.flex.components.core.BillCardPanel;
			import smartx.flex.components.event.BasicEvent;
			import smartx.flex.components.util.OperatingTipUtil;
			import smartx.flex.components.util.SmartXMessage;
			import smartx.flex.components.vo.GlobalConst;
			
			private var destination:String = GlobalConst.SERVICE_FORM;
			private var formService:RemoteObject;
			private var endpoint:String  = ClientEnviorment.getInstance().getVar(ClientEnviorment.KEY_SERVICE_ENDPOINT) as String;
			
			[Bindable]
			public var dataValue:Object;
			
			[Bindable]
			public var bcp:BillCardPanel;
			
			private var fileReference:FileReference = new FileReference();
			
			private var filterArray:Array = new Array();
			
			[Bindable]
			private var dataCol:ArrayCollection = new ArrayCollection();
			
			private var typeName:String = "图片";
			private var typeValue:String = "*.jpg;*.png;*.gif;*.bmp";
			
			protected function init():void{
				
				var fObj1:Object = new Object();
				fObj1["name"] = "图片";
				fObj1["value"] = "*.jpg;*.png;*.gif;*.bmp";
				dataCol.addItem(fObj1);
				
				var fObj2:Object = new Object();
				fObj2["name"] = "视频";
				fObj2["value"] = "*.flv";
				dataCol.addItem(fObj2);
				
				var filter:FileFilter = new FileFilter(typeName, typeValue);
				
				filterArray.push(filter);
				
				formService = new RemoteObject(destination);
				
				if(endpoint != null)
					formService.endpoint = endpoint;
				
				formService.fileUpload.addEventListener(ResultEvent.RESULT,fileUploadHandler);
				formService.fileUpload.addEventListener(FaultEvent.FAULT,faultHandler);
				
				//选择文件后，加载文件
				
				fileReference.addEventListener(Event.SELECT, selectHandler);
				fileReference.addEventListener(Event.COMPLETE,completeHandler);
				
			}
			
			private function selectHandler(event:Event):void {
				
				fileReference.load();  //加载文件
				
				fileNameField.text = fileReference.name;
				
//				btnUpload_clickHandler();
				
			}
			
			private function completeHandler(event:Event):void{
				btnUpload_clickHandler();
			}
			
			protected function btnBrows_clickHandler(event:MouseEvent):void{
				
				fileReference.browse(filterArray);
				
			}
			protected function btnUpload_clickHandler():void{
				if(fileReference.data != null){
					var fileType:String = fileReference.type;
					OperatingTipUtil.startOperat("正在上传....");
					formService.fileUpload(fileReference.data,fileReference.name,fileType);
				}else{
					SmartXMessage.show("没有可上传的文件!");
				}
			}
			
			protected function fileUploadHandler(event:ResultEvent):void{
				OperatingTipUtil.endOperat();
				var filePath:String = event.result as String;
				var item:Object = fileTypeCb.selectedItem;
				var projectUrl:String = endpoint.split("/messagebroker")[0];
				if(item["name"] == "图片"){
					dataValue["IMAGEURL"] = "upload/"+fileNameField.text;
				}else if(item["name"] == "视频"){
					dataValue["VIDEOURL"] = "upload/"+fileNameField.text;
				}
				bcp.setDataValue(dataValue);
				if(dataValue["CODE"] != "" && dataValue["CODE"] != null && dataValue["ID"] != "" && dataValue["ID"] != null ){
					bcp.save();
				}
				PopUpManager.removePopUp(this);
				dispatchEvent(new BasicEvent(BasicEvent.LOADDATA_SUCCESSFUL));
				SmartXMessage.show("上传成功!");
			}
			
			private function faultHandler(event:FaultEvent):void{
				OperatingTipUtil.endOperat();
				SmartXMessage.show("上传失败",SmartXMessage.MESSAGE_ERROR,event.fault.faultDetail);
			}
			
			protected function fileTypeCb_changeHandler(event:ListEvent):void
			{
				filterArray = new Array();
				
				var item:Object = fileTypeCb.selectedItem;
				
				var filter:FileFilter = new FileFilter(item["name"], item["value"]);
				
				filterArray.push(filter);
				
			}
			
		]]>   
	</fx:Script>       
	<mx:VBox width="100%" height="100%" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5" >
		<mx:HBox width="100%" height="100%" horizontalAlign="left">
			<mx:Label text="文件类型:" />
			<mx:ComboBox id="fileTypeCb" labelField="name"  change="fileTypeCb_changeHandler(event)" dataProvider="{dataCol}" />
		</mx:HBox>
		<mx:HBox width="100%" height="100%" horizontalAlign="left">
			<mx:Label text="文件:" />
			<mx:TextInput id="fileNameField" width="150" editable="false"/>
			<mx:Button id="btnBrows" click="btnBrows_clickHandler(event)" x="57" y="60" icon="{AssetsFileLib.browseIcon}" toolTip="选择文件" />
		</mx:HBox>
	</mx:VBox>
</mx:TitleWindow>