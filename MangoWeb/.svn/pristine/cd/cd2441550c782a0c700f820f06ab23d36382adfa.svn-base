<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" 
		   xmlns:chart="smartx.flex.components.core.chart.*"
		   xmlns:entity="smartx.bam.flex.modules.entitymodel.utils.*"
		   xmlns:ext="smartx.flex.components.core.ext.*"
		   xmlns:core="smartx.flex.components.core.*"
		   width="100%" height="100%"
		   creationComplete="init()">
	<fx:Declarations>
		<mx:HBox id="dsHbox" width="100%" horizontalAlign="center" verticalAlign="middle" >
			<mx:Label text="数据源:"/>
			<mx:ComboBox id="dsCob" dataProvider="{datasourceCol}" change="dsCob_changeHandler(event)"/>
			<mx:Button id="exportBtn" label="导出" toolTip="导出视图定义" icon="{AssetsFileLib.exportIcon}" click="exportBtn_clickHandler(event)" />
			<mx:Button id="viewBtn" label="查看" toolTip="查看视图定义" icon="{AssetsFileLib.viewIcon}" click="dataList_doubleClickHandler()" />
		</mx:HBox>
		
		<mx:TitleWindow id="contentWindow" width="800" height="450" showCloseButton="true" close="{PopUpManager.removePopUp(contentWindow)}" >
			<mx:TextArea id="contentTxt" width="100%" height="100%" editable="false"  />
		</mx:TitleWindow>
		
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.CloseEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.mxml.RemoteObject;
			
			import smartx.flex.components.assets.AssetsFileLib;
			import smartx.flex.components.basic.ClientEnviorment;
			import smartx.flex.components.util.OperatingTipUtil;
			import smartx.flex.components.util.SmartXMessage;
			import smartx.flex.components.vo.GlobalConst;
			[Bindable]
			public var debugMode:Boolean = false;
			
			[Bindable]
			public var destination:String = GlobalConst.SERVICE_FORM;
			[Bindable]
			private var endpoint:String  = ClientEnviorment.getInstance().getVar(ClientEnviorment.KEY_SERVICE_ENDPOINT) as String;
			private var formService:RemoteObject;
			
			[Bindable]
			private var datasourceCol:ArrayCollection = new ArrayCollection();
			
			private function init():void{
				
				var columns:Array = new Array();
				var dgColumn:DataGridColumn = new DataGridColumn();
				dgColumn.dataField = "view_name";
				dgColumn.headerText = "视图名称";
				dgColumn.width = 255;
				columns.push(dgColumn);
				
				var queryColumns:Array = new Array();
				queryColumns.push("view_name");
				
				if(ClientEnviorment.getInstance().getVar(ClientEnviorment.KEY_GLOBAL_DEBUGMODE) != null)
					debugMode = ClientEnviorment.getInstance().getVar(ClientEnviorment.KEY_GLOBAL_DEBUGMODE);
				formService = new RemoteObject(destination);
				if(endpoint!=null)
					formService.endpoint = endpoint;

				formService.queryAllRelationDsName.addEventListener(ResultEvent.RESULT,queryAllRelationDsNameHandler);					
				formService.queryAllRelationDsName.addEventListener(FaultEvent.FAULT,function(event:FaultEvent):void{
					SmartXMessage.show("获取数据源错误!",SmartXMessage.MESSAGE_ERROR,event.fault.faultString);
					dispatchEvent(new Event(AdvListChart.SHOWDATA_FINISH));
				});
				
				formService.generateViewFile.addEventListener(ResultEvent.RESULT,generateViewFileHandler);					
				formService.generateViewFile.addEventListener(FaultEvent.FAULT,function(event:FaultEvent):void{
					OperatingTipUtil.endOperat();
					SmartXMessage.show("导出视图发生错误!",SmartXMessage.MESSAGE_ERROR,event.fault.faultString);
					dispatchEvent(new Event(AdvListChart.SHOWDATA_FINISH));
				});
				
				dataList.dataListGrid.doubleClickEnabled = true;
				dataList.dataListGrid.addEventListener(MouseEvent.DOUBLE_CLICK,function(event:MouseEvent):void{
					dataList_doubleClickHandler();
				});
				
				dataList.queryColumns = queryColumns;
				dataList.columns = columns;
				dataList.sql = "select * from user_views";
				
				formService.queryAllRelationDsName();
				
				dataList.leftBtnBox.addChild(dsHbox);
				
			}
			
			private function queryAllRelationDsNameHandler(event:ResultEvent):void{
				var array:Array = event.result as Array;
				datasourceCol.removeAll();
				if(array != null){
					for each(var dsName:String in array){
						datasourceCol.addItem(dsName);
					}
				}
				
				dsCob_changeHandler(null);
			}
			
			protected function dsCob_changeHandler(event:ListEvent):void
			{
				dataList.dataSource = dsCob.selectedItem as String;
				dataList.refresh();
			}
			
			protected function exportBtn_clickHandler(event:MouseEvent):void
			{
				
				var array:Array = dataList.getSelectedRowValues();
				if(array != null && array.length>0){
					var condition:String = "";
					for each(var item:Object in array){
						var name:String = item["view_name"];
						if(condition == ""){
							condition = "'"+name+"'";
						}else{
							condition = condition+",'"+name+"'";
						}
					}
					SmartXMessage.show("确定要导出选中视图?",SmartXMessage.MESSAGE_CONFIRM,"",this,function(eve:CloseEvent):void{
						var querySql:String = "select * from ("+dataList.getRealSql()+") where view_name in ("+condition+")";
						OperatingTipUtil.startOperat("正在导出视图....");
						formService.generateViewFile(dataList.dataSource,querySql,"VIEW.sql");
					});
				}else{
					SmartXMessage.show("确定要导出查询出的所有视图?",SmartXMessage.MESSAGE_CONFIRM,"",this,function(eve:CloseEvent):void{
						OperatingTipUtil.startOperat("正在导出视图....");
						formService.generateViewFile(dataList.dataSource,dataList.getRealSql(),"VIEW.sql");
					});
				}
				

			}
			
			private function generateViewFileHandler(event:ResultEvent):void{
				OperatingTipUtil.endOperat();
				var fileUrl:String = event.result as String;				
				navigateToURL(new URLRequest(fileUrl));
			}
			
			protected function dataList_doubleClickHandler():void
			{
				var array:Array = dataList.getSelectedRowValues();
				if(array != null && array.length>0){
					
					PopUpManager.addPopUp(contentWindow,this.root,true);
					PopUpManager.centerPopUp(contentWindow);
					contentTxt.text = "";
					for each(var item:Object in array){
						var name:String = item["view_name"];
						var content:String = item["text"];
						contentTxt.text = contentTxt.text+"\n"+" create or replace view "+name+" as "+content+";";
					}
					
				}else{
					SmartXMessage.show("没有选中任何记录!");
				}
				
			}
			
		]]>
	</fx:Script>
	<mx:VBox width="100%" height="100%" >
		<chart:AdvListChart width="100%" height="100%" id="dataList"
							isAllowMultipleSelection = "true"
							/>
	</mx:VBox>
</mx:Module>