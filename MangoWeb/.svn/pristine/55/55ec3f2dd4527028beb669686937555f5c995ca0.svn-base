<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" 
		   layout="vertical" width="100%" height="100%"
		   creationComplete="init()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import smartx.bam.flex.vo.BAMConst;
			import smartx.flex.components.util.MetadataTempletUtil;
			import smartx.flex.components.util.SmartXMessage;
			import smartx.flex.components.util.StringUtils;
			import smartx.flex.components.vo.MetadataTemplet;
			
			private function init():void{
				var url:String = this.loaderInfo.url;
				var parameters:Object = StringUtils.parseUrlParameters(url);
				var mtcode:String = parameters.mtcode;
				if(mtcode == null){
					SmartXMessage.show("必须指定元数据模板编码(mtcode)");
					return;
				}
				
				 var gisAppCode:String = parameters.gisAppCode;
				if(gisAppCode == null){
					SmartXMessage.show("必须指定GIS应用编码(gisAppCode)");
					return;
				}
				var gisMap:GisMap = new GisMap();
				var metadataTemplet:MetadataTemplet = MetadataTempletUtil.getInstance().findMetadataTemplet(mtcode);
				var contentXml:XML = metadataTemplet.contentXML;
				gisMap.mapUrl = String(contentXml.geoServer.@url);
				for each(var gisApp:XML in contentXml.gisApplications.gisApplication){
					if(String(gisApp.@code) == gisAppCode){
						var basicLayers:Array = [];
						var entityLayers:Array = [];
						for each(var basicLayer:XML in gisApp.mapInfo.layers.basicLayers.layer){
							if(String(basicLayer.@isDisplay) == "true")
								basicLayers.push(basicLayer);
						}
						for each(var entityLayer:XML in gisApp.mapInfo.layers.entityLayers.layer){
							if(String(entityLayer.@isDisplay) == "true")
								entityLayers.push(entityLayer);
						}
						gisMap.basicLayers = basicLayers;
						gisMap.entityLayers = entityLayers;
						gisMap.centerPoint = String(gisApp.mapInfo.centerPoint);
						gisMap.zoom = String(gisApp.mapInfo.zoom);
						gisMap.srid = String(gisApp.@srid);
						gisMap.contentXml = gisApp;
						break;
					}else
						continue;
				} 
				
			}
		]]>
	</fx:Script>
</mx:Module>
