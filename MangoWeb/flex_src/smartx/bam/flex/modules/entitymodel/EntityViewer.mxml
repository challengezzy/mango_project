<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" layout="vertical" width="100%" height="100%"
		   creationComplete="init()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.mxml.RemoteObject;
			
			import smartx.bam.flex.modules.dqc.listener.ChkAndDoEmTreeItemClickListener;
			import smartx.flex.components.basic.ClientEnviorment;
			import smartx.flex.components.util.MetadataTempletUtil;
			import smartx.flex.components.util.SmartXMessage;
			import smartx.flex.components.util.StringUtils;
			import smartx.flex.components.vo.GlobalConst;
			import smartx.flex.components.vo.MetadataTemplet;
			import smartx.flex.components.vo.SimpleHashVO;
			
			public var endpoint:String = ClientEnviorment.getInstance().getVar(ClientEnviorment.KEY_SERVICE_ENDPOINT) as String;
			[Bindable]
			public var debugMode:Boolean = ClientEnviorment.getInstance().getVar(ClientEnviorment.KEY_GLOBAL_DEBUGMODE);
			
			private var rpc:RemoteObject;
			
			private var entityModelCode:String;
			private var entityCode:String;
			
			private function init():void{
				var url:String = this.loaderInfo.url;
				var parameters:Object = StringUtils.parseUrlParameters(url);
				entityModelCode = parameters.entityModelCode;
				entityCode = parameters.entityCode;
				
				if(entityModelCode == null){
					SmartXMessage.show("必须指定实体模型编码(entityModelCode)");
					return;
				}
				
				if(entityCode == null){
					SmartXMessage.show("必须指定实体编码(entityCode)");
					return;
				}
				
				var sql:String = "select mtcode from bam_entitymodel where code='"+entityModelCode+"'";
				rpc = new RemoteObject(GlobalConst.SERVICE_FORM);
				if(endpoint)
					rpc.endpoint = endpoint;
				rpc.getSimpleHashVoArrayByDS.addEventListener(ResultEvent.RESULT,getSimpleHashVoArrayByDSHandler);
				rpc.getSimpleHashVoArrayByDS.addEventListener(FaultEvent.FAULT,function(event:FaultEvent):void{
					SmartXMessage.show("查询数据时出错!",SmartXMessage.MESSAGE_ERROR,event.fault.faultString);
				});
				rpc.getSimpleHashVoArrayByDS(null,sql);
			}
			
			private function getSimpleHashVoArrayByDSHandler(event:ResultEvent):void{
				var result:Array = event.result as Array;
				if(result == null || result.length ==0){
					SmartXMessage.show("指定的实体模型["+entityModelCode+"]不存在");
					return;
				}

				var shv:SimpleHashVO = result[0] as SimpleHashVO;
				var mtcode:String = shv.dataMap["mtcode"];
				var metadataTemplet:MetadataTemplet = MetadataTempletUtil.getInstance().findMetadataTemplet(mtcode);
				var contentXML:XML = metadataTemplet.contentXML;
				var entityList:XMLList = contentXML.entities.entity.(@code==entityCode);
				if(entityList.length() == 0){
					SmartXMessage.show("指定的实体["+entityCode+"]不存在");
					return;
				}
				var entity:XML = entityList[0];
				var entityObj:Object = {name:entity.@name,code:entity.@code,content:entity,
					type:entity.@isAbstract=="true"?"abstractEntity":"entity",entireContent:contentXML};
				var tmpListener:ChkAndDoEmTreeItemClickListener = new ChkAndDoEmTreeItemClickListener();
				tmpListener.itemClick(entityObj,mainBox);
			}
		]]>
	</fx:Script>
	<mx:VBox id="mainBox" width="100%" height="100%" paddingBottom="5" paddingLeft="5" paddingRight="5"
			 paddingTop="5">
		
	</mx:VBox>
</mx:Module>
