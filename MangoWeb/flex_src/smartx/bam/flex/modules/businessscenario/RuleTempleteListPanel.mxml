<SuperPanel xmlns="net.brandonmeyer.containers.*" xmlns:mx="library://ns.adobe.com/flex/mx" width="600" height="550" 
			allowDrag="true" allowClose="true" allowMaximize="true" 
			allowMinimize="true" allowResize="true" fontSize="12" close="onClose()"
			xmlns:ns1="smartx.flex.components.*" creationComplete="init()" 
			xmlns:viewStackEffects="org.efflex.mx.viewStackEffects.*"
			xmlns:core="smartx.flex.components.core.*"
			xmlns:fx="http://ns.adobe.com/mxml/2009"
			xmlns:comm="smartx.bam.flex.modules.common.*"
			title="规则模板设计"
			>
	<fx:Metadata>		       
		[Event(name='edit',type='smartx.flex.components.event.StyleTemplateEvent')]
		[Event(name='insert',type='smartx.flex.components.event.StyleTemplateEvent')]
		[Event(name='beforeSave',type='smartx.flex.components.event.StyleTemplateEvent')]
		[Event(name='save',type='smartx.flex.components.event.StyleTemplateEvent')]
		[Event(name='returnToList',type='smartx.flex.components.event.StyleTemplateEvent')]
		[Event(name='view',type='smartx.flex.components.event.StyleTemplateEvent')]
	</fx:Metadata>
	<fx:Declarations>
		
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.effects.Effect;
			import mx.effects.EffectInstance;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.mxml.RemoteObject;
			
			import org.efflex.mx.viewStackEffects.CoverFlowPapervision3D;
			import org.efflex.mx.viewStackEffects.Papervision3DViewStackEffect;
			
			import smartx.flex.components.assets.AssetsFileLib;
			import smartx.flex.components.basic.ClientEnviorment;
			import smartx.flex.components.basic.DeskTopFrame;
			import smartx.flex.components.event.BillCardPanelEvent;
			import smartx.flex.components.event.StyleTemplateEvent;
			import smartx.flex.components.util.TempletDataUtil;
			import smartx.flex.components.vo.GlobalConst;
			import smartx.flex.components.vo.ItemVO;
			import smartx.flex.components.vo.SimpleComboxItemVO;
			import smartx.flex.components.vo.SimpleHashVO;
			import smartx.flex.components.vo.SimpleRefItemVO;
			import smartx.flex.components.vo.TempletItemVO;
			import smartx.flex.components.vo.TempletVO;
			
			[Bindable]
			public var templetCode:String = "T_V_BAM_RULETEMPLATE_C";
			[Bindable]
			public var debugMode:Boolean = ClientEnviorment.getInstance().getVar(ClientEnviorment.KEY_GLOBAL_DEBUGMODE);
			[Bindable]
			public var editable:Boolean = false;
			[Bindable]
			public var switchEffect:Effect;
			private var returnAfterSave:Boolean = false;
			[Bindable]
			public var showSystemButton:Boolean = false;
			[Bindable]
			public var destination:String = GlobalConst.SERVICE_FORM;
			[Bindable]
			public var endpoint:String = String(ClientEnviorment.getInstance().getVar(ClientEnviorment.KEY_SERVICE_ENDPOINT));;
			[Bindable]
			public var initQueryCondition:String;
			[Bindable]
			public var scenarioId:String;
			
			private var templetVO:TempletVO; 
			
			private var ruleCode:String;
			
			private var formService:RemoteObject;
			
			private var bamService:RemoteObject;
			
			private var userName:String;
			
			private var desktop:DeskTopFrame = ClientEnviorment.getInstance().getVar(ClientEnviorment.DESKTOP_FRAME) as DeskTopFrame;
			
			private function init():void{
				if(templetCode == null)
					throw Error("元原模板编号不能为null");
				if(switchEffect == null)
					switchEffect = new CoverFlowPapervision3D();
				
				formService = new RemoteObject(destination);
				bamService = new RemoteObject("smartXBAMService");
				if(endpoint!=null){
					formService.endpoint = endpoint;
					bamService.endpoint = endpoint;
				}
				
				
				formService.getTempletVO.addEventListener(ResultEvent.RESULT,getTempletVOHandler);
				formService.getTempletVO.addEventListener(FaultEvent.FAULT,faultHandler);
				formService.getTempletVO(templetCode);
				
				bamService.deleteRuleTemplete.addEventListener(ResultEvent.RESULT,deleteRuleTempleteHandler);
				bamService.deleteRuleTemplete.addEventListener(FaultEvent.FAULT,faultHandler);
				
				userName = String(ClientEnviorment.getInstance().getVar(ClientEnviorment.KEY_LOGIN_USER_LOGINNAME));
				
				listPanel.isShowAlert = false;
				
				listPanel.query(false,true,true);
				
			}
			
			private function deleteRuleTempleteHandler(event:ResultEvent):void{
				listPanel.query();
			}
			
			private function getTempletVOHandler(event:ResultEvent):void{
				templetVO = event.result as TempletVO;
			}
			
			private function faultHandler(event:FaultEvent):void{   
				Alert.show(event.fault.faultString, 'Error');
			}
			
			private function onClose():void{
				PopUpManager.removePopUp(this);
			}
			

			protected function nextBtn_clickHandler(event:MouseEvent):void
			{
				if(listPanel.getSelectedRowValue() != null){
					
					var row:Object = listPanel.getSelectedRowValue();
					
					var templeteId:String = String(row["ID"]);
					
					var crp:CreateRulePanel = new CreateRulePanel();
					crp.endpoint = endpoint;
					crp.showSystemButton = false;
					crp.templeteId = templeteId;
					crp.initQueryCondition = " ruletemplateid="+templeteId;
					
					PopUpManager.addPopUp(crp,desktop,true);
					PopUpManager.centerPopUp(crp);
					
					onClose();
					
				}
				else{
					Alert.show("请选择一条记录");
				}
			}

		]]>
	</fx:Script>
	<mx:VBox width="100%" height="100%" id="listBox" showEffect="{switchEffect}" hideEffect="{switchEffect}" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5">
		<mx:HBox width="100%" horizontalAlign="left">
			<mx:Button id="canelBtn" label="取消"  click="onClose()" icon="{AssetsFileLib.closeIcon}" />
		</mx:HBox>
		<core:BillListPanel showInitingWindow="false" destination="{destination}" endpoint="{endpoint}" 
							templetCode="{templetCode}" id="listPanel" editable="false" width="100%" height="100%" 
							showEditBox="false" debugMode="{debugMode}" >
		</core:BillListPanel>
		<mx:HBox width="100%" id="listButtonBox" horizontalAlign="right">
			<mx:Button id="nextBtn" label="下一步"  click="nextBtn_clickHandler(event)" icon="{AssetsFileLib.nextstepIcon}" />
		</mx:HBox>
	</mx:VBox>
</SuperPanel>