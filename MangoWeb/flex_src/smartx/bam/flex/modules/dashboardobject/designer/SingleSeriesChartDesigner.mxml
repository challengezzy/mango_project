<?xml version="1.0" encoding="utf-8"?>
<designer:BaseDesigner  
		 xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:containers="flexlib.containers.*" width="100%" height="100%"
		 creationComplete="init()" xmlns:designer="smartx.bam.flex.modules.dashboardobject.designer.*" 
		 xmlns:components="smartx.bam.flex.modules.dashboardobject.designer.components.*">
	<fx:Declarations>
		<mx:FormItem label="F系链接字段" id="linkFieldItem">
			<mx:ComboBox id="linkFieldInput" editable="true"
						 change="{contentXml.extend.items.item.@linkField=linkFieldInput.text}" dataProvider="{fieldList}"/>
		</mx:FormItem>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.ColorPickerEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var typeList:ArrayCollection = new ArrayCollection(
				[
					{label:"简单饼图",data:"piechart"},
					
					{label:"F系饼图",data:"Pie2D"},
					{label:"F系三维饼图",data:"Pie3D"},
					{label:"F系柱状图",data:"Column2D"},
					{label:"F系三维柱状图",data:"Column3D"},
					{label:"F系水平柱状图",data:"Bar2D"},
					{label:"F系折线图",data:"Line"},
					{label:"F系区域图",data:"Area2D"},
					{label:"F系甜圈图",data:"Doughnut2D"},
					{label:"F系三维甜圈图",data:"Doughnut3D"},
					{label:"F系漏斗图",data:"Funnel"},
					{label:"F系金字塔图",data:"Pyramid"},
				]
				);
			
			private function init():void{
				if(!propertyForm.contains(linkFieldItem))
					propertyForm.addChild(linkFieldItem);
			}
			
			override public function generalFormComplete():void{
				if(contentXml.extend.items.length()==0){
					var itemsXML:XML = <items><item/></items>;
					contentXml.extend.appendChild(itemsXML);
				}
				
				if(contentXml.charttype.length() == 0){
					contentXml.charttype = "piechart";
				}
				for each(var o:Object in typeList){
					if(o.data == contentXml.charttype){
						chartTypeInput.selectedItem = o;
						break;
					}else
						chartTypeInput.selectedIndex = 0;
				}
				
				updateStateByChartType();
			}
			
			private function updateStateByChartType():void{
				if( chartTypeInput.selectedItem.data == "piechart"){
					currentState = "piechart";
					if(propertyForm.contains(linkFieldItem))
						propertyForm.removeChild(linkFieldItem);
				}
				else{
					currentState = "fusion";
					if(!propertyForm.contains(linkFieldItem))
						propertyForm.addChild(linkFieldItem);
				}
			}
			
			private function myColorPicker_clickHandler(event:ColorPickerEvent):void{
				if(colorInput.text == "")
					colorInput.text = colorInput.text.concat(myColorPicker.selectedColor.toString(16));
				else
					colorInput.text = colorInput.text.concat(",").concat(myColorPicker.selectedColor.toString(16));
				colorInput.dispatchEvent(new Event(Event.CHANGE));
			}
			
			private function chartTypeInput_changeHandler(event:ListEvent):void{
				if(chartTypeInput.selectedItem != null){
					contentXml.charttype = chartTypeInput.selectedItem.data;
					updateStateByChartType();
				}
			}
			
			override public function initTableStructComplete():void{
				initProperty();
			}
			
			private function initProperty():void{
				setField(String(contentXml.extend.items.item.@dataField),dataFieldInput);
				setField(String(contentXml.extend.items.item.@labelField),labelFieldInput);
				setField(String(contentXml.extend.items.item.@nameField),nameFieldInput);
				setField(String(contentXml.extend.items.item.@linkField),linkFieldInput);
			}
			
			private function setField(value:String,cbo:ComboBox):void{
				for each(data in fieldList){
					if(data == value){
						cbo.selectedItem = data;
						break;
					}else{
						value == ""
							?cbo.selectedIndex = -1
							:cbo.text = value;
					}
				}
			}
			
		]]>
	</fx:Script>
	<designer:states>
		<mx:State name="piechart"/>
		<mx:State name="fusion"/>
	</designer:states>
	<mx:VBox id="setVBox" width="100%" height="100%" label="设置" >
		<containers:AdvancedForm id="propertyForm" width="100%" height="100%">
			<mx:FormItem label="类型" required="true">
				<mx:ComboBox id="chartTypeInput" dataProvider="{typeList}" change="chartTypeInput_changeHandler(event)"/>
			</mx:FormItem>
			<mx:FormItem label="取值绑定字段" required="true" id="dataFieldItem">
				<mx:ComboBox id="dataFieldInput" editable="true"
							 change="{contentXml.extend.items.item.@dataField=dataFieldInput.text}" dataProvider="{fieldList}"/>
			</mx:FormItem>
			<mx:FormItem label="显示名称绑定字段" id="labelFieldItem">
				<mx:ComboBox id="labelFieldInput" editable="true"
							 change="{contentXml.extend.items.item.@labelField=labelFieldInput.text}" dataProvider="{fieldList}"/>
			</mx:FormItem>
			<mx:FormItem label="图例名称绑定字段" id="nameFieldItem" excludeFrom="fusion">
				<mx:ComboBox id="nameFieldInput" editable="true"
							 change="{contentXml.extend.items.item.@nameField=nameFieldInput.text}" dataProvider="{fieldList}"/>
			</mx:FormItem>
			<mx:FormItem label="颜色指定" id="colorItem">
				<mx:HBox width="100%" height="100%">
					<mx:TextInput id="colorInput" width="150" toolTip="多种颜色用逗号分隔(FF0000,0372AB,00000...)"
								  text="{contentXml.extend.items.item.@color}"
								  change="{contentXml.extend.items.item.@color=colorInput.text}"/>
					<mx:ColorPicker id="myColorPicker" change="myColorPicker_clickHandler(event)"/>
				</mx:HBox>
			</mx:FormItem>
			<mx:FormItem label="绝对宽度" includeIn="fusion">
				<mx:TextInput width="150" id="widthInput" 
							  toolTip="设置图表的绝对宽度（单位像素），如果不设置，则默认使用100%相对宽度，但F系控件的相对宽度有时可能无法正确显示，请慎用"
							  restrict="0-9"
							  text="{contentXml.extend.width}"
							  change="{contentXml.extend.width=widthInput.text}"
							  />
			</mx:FormItem>
			<mx:FormItem label="绝对高度" includeIn="fusion">
				<mx:TextInput width="150" id="heightInput" 
							  toolTip="设置图表的绝对高度（单位像素），如果不设置，则默认使用100%相对高度，但F系控件的相对高度有时可能无法正确显示，请慎用"
							  restrict="0-9"
							  text="{contentXml.extend.height}"
							  change="{contentXml.extend.height=heightInput.text}"
							  />
			</mx:FormItem>
			<mx:FormItem>
				<mx:CheckBox id="isShowLabelCbx" label="是否显示标签" 
							 selected="{contentXml.extend.isShowLabel=='true'?true:false}"
							 change="{contentXml.extend.isShowLabel=isShowLabelCbx.selected?true:false}"/>
			</mx:FormItem>
			<mx:FormItem includeIn="fusion">
				<mx:CheckBox id="isShowValueCbx" label="是否显示数值" 
							 selected="{contentXml.extend.isShowValue=='true'?true:false}"
							 change="{contentXml.extend.isShowValue=isShowValueCbx.selected?true:false}"/>
			</mx:FormItem>
			<mx:FormItem includeIn="fusion">
				<mx:CheckBox id="isShowAnimationCbx" label="是否显示动画" 
							 selected="{contentXml.extend.isShowAnimation=='true'?true:false}"
							 change="{contentXml.extend.isShowAnimation=isShowAnimationCbx.selected?true:false}"/>
			</mx:FormItem>
			<mx:FormItem excludeFrom="fusion">
				<mx:CheckBox id="isShowLegendCbx" label="是否显示图例" 
							 selected="{contentXml.extend.isShowLegend=='true'?true:false}"
							 change="{contentXml.extend.isShowLegend=isShowLegendCbx.selected?true:false}"/>
			</mx:FormItem>
			<mx:FormItem excludeFrom="fusion">
				<mx:CheckBox id="isHorizontalLegend" label="是否横向排列图例" 
							 selected="{contentXml.isHorizontalLegend=='true'?true:false}"
							 change="{contentXml.isHorizontalLegend=isHorizontalLegend.selected?true:false}"/>
			</mx:FormItem>
		</containers:AdvancedForm>
	</mx:VBox>
</designer:BaseDesigner>
