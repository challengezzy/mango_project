<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		   creationComplete="init()">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[			
			import mx.controls.Button;
			
			import smartx.flex.components.core.GroupTitleListPanel;
			import smartx.flex.components.styletemplate.ifc.CardButtonListener;
			import smartx.flex.components.styletemplate.ifc.GroupListButtonListener;
			import smartx.flex.components.styletemplate.ifc.ListButtonListener;
			import smartx.flex.components.util.Hashtable;
			import smartx.flex.components.util.IconUtility;
			import smartx.flex.components.vo.MetadataTemplet;
			
			public var metadataTemplet:MetadataTemplet;
			public var endpoint:String;
			private var listenerMap:Hashtable = new Hashtable();
			
			private function init():void{
				if(metadataTemplet == null)
					throw new Error("元数据模板不能为空");
				var xml:XML = metadataTemplet.contentXML;
				var groupTitleListPanel:GroupTitleListPanel = new GroupTitleListPanel();
				if(xml.tablename.length() == 0)
					throw new Error("表名不能为空");
				groupTitleListPanel.tableName = xml.tablename;
				if(endpoint != null)
					groupTitleListPanel.endpoint = endpoint;
				
				if(xml.labelfield.length()>0){
					groupTitleListPanel.labelField = xml.labelfield;
				}
				
				if(xml.groupfield.length()>0){
					groupTitleListPanel.groupField = xml.groupfield;
				}
				
				if(xml.iconfield.length()>0){
					groupTitleListPanel.iconField = xml.iconfield;
				}
				
				if(xml.condition.length()>0){
					groupTitleListPanel.condition = xml.condition;
				}
				
				if(xml.title.length()>0){
					groupTitleListPanel.title = xml.title;
				}
				
				if(xml.percentWidth.length() > 0)
					groupTitleListPanel.percentWidth = xml.percentWidth;
				groupTitleListPanel.percentHeight = 100;
				if(xml.percentHeight.length() > 0)
					groupTitleListPanel.percentHeight = xml.percentHeight;
				
				this.addChild(groupTitleListPanel);
				
				callLater(function():void{
					
					//自定义按钮
					for each(var cardButtonXML:XML in xml.customButton.button){
						var cardButton:Button = new Button();
						cardButton.id = cardButtonXML.@id;
						cardButton.label = cardButtonXML.@label;
						cardButton.toolTip = cardButtonXML.@toolTip;
						var cardIconUrl:String = cardButtonXML.@icon;
						if(cardIconUrl != null && cardIconUrl != ""){
							var cardIcon:Class = IconUtility.getClass(cardButton,cardIconUrl,16,16);
							cardButton.setStyle("icon",cardIcon);
						}
						var cardListeners:Array = [];
						for each(var cardListener:XML in cardButtonXML.listeners.listener){
							var cardClassReference:Class = getDefinitionByName(cardListener) as Class;
							var cardListenerClass:GroupListButtonListener = new cardClassReference() as GroupListButtonListener;
							cardListeners.push(cardListenerClass);
						}
						listenerMap.add(cardButton.id,cardListeners);
						cardButton.addEventListener(MouseEvent.CLICK,function(event:MouseEvent):void{
							var array:Array = listenerMap.find(event.target.id) as Array;
							if(array != null){
								for each(var temp:GroupListButtonListener in array){
									temp.buttonClick(groupTitleListPanel.currentSelectedList,groupTitleListPanel.currentSelectedItem);
								}
							}	
						});
						groupTitleListPanel.customBtnHbox.addChild(cardButton);
					}
				});
			}
		]]>
	</fx:Script>
</mx:Canvas>