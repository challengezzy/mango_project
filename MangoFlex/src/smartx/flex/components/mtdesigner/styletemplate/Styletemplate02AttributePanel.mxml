<?xml version="1.0" encoding="utf-8"?>
<baseAttr:BaseAttributePanel xmlns:fx="http://ns.adobe.com/mxml/2009" 
							 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:baseAttr="smartx.flex.components.mtdesigner.styletemplate.*"
							 creationComplete="init()" label="{titleName}">
	
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:VBox width="100%" height="100%" id="systemConfigEditor" >
		</mx:VBox>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.events.ListEvent;
			
			import smartx.flex.components.assets.AssetsFileLib;
			import smartx.flex.components.core.cep.CEPUtils;
			import smartx.flex.components.util.SmartXMessage;
			import smartx.flex.components.vo.GlobalConst;
			
			[Bindable]
			private var buttonXML:XML;
			[Bindable]
			private var embedBtnXml:XML			
			[Bindable]
			private var cardButtonXML:XML;
			
			private function init():void{
				for each(var data:Object in showOperationButtonTypeDp){
					if(data.data == String(sourceXML.showOperationButtonType)){
						showOperationTypeCbo.selectedItem = data;
						break;
					}else
						showOperationTypeCbo.selectedItem = null;
				}
			}
			
			override protected function getXMLString():String{
				return sourceXML.toString();
			}
			
			protected function addBtn_clickHandler(event:MouseEvent):void
			{
				var tempBtnXml:XML = <button id="在此填写按钮ID" label="在此填写按钮名称" toolTip="在此填写按钮提示信息" icon="在此填写按钮图标" ><listeners /></button>;
				if( sourceXML.customListButton.length()<= 0 ){
					var customListButtonXML:XML = new XML("<customListButton />");
					sourceXML.appendChild(customListButtonXML);
				}
				
				sourceXML.customListButton.appendChild(tempBtnXml);
				
				btnsDatagrid.invalidateList();
				
			}
			
			protected function musBtn_clickHandler(event:MouseEvent):void
			{
				var item:Object = btnsDatagrid.selectedItem;
				if(item != null ){
					var tempXml:XML = item as XML;
					CEPUtils.xmlDeleteNode(tempXml);
					buttonXML = null;
				}
			}
			
			protected function addLstBtn_clickHandler(event:MouseEvent):void
			{
				
				var btnObj:Object = btnsDatagrid.selectedItem;
				if( btnObj != null ){
					if( buttonXML == null ){
						buttonXML = <button id="" label="" toolTip="" icon="" ><listeners /></button>;
					}
					
					var listener:XML = new XML("<listener>在此填写监听器实现类</listener>");
					
					buttonXML.listeners.appendChild(listener);
					
					lstsDatagrid.invalidateList();
				}else{
					SmartXMessage.show("请先选择一条按钮数据!");
				}
				
				
			}
			
			protected function musLstBtn_clickHandler(event:MouseEvent):void
			{
				var item:Object = lstsDatagrid.selectedItem;
				if( item != null ){
					var listenerXml:XML = item as XML;
					CEPUtils.xmlDeleteNode(listenerXml);
					lstsDatagrid.invalidateList();
				}
			}
			
			protected function btnsDatagrid_clickHandler(event:MouseEvent):void
			{
				var item:Object = btnsDatagrid.selectedItem;
				if(item != null ){
					buttonXML = item as XML;
					lstsDatagrid.invalidateList();
				}
				
			}
			
			private function lstsColLabelFunction(item:Object,column:DataGridColumn):String{
				var tempXml:XML = XML(item);
				var result:String = tempXml.text();
				return result;
			}
			
			private function cardLstsColLabelFunction(item:Object,column:DataGridColumn):String{
				var tempXml:XML = XML(item);
				var result:String = tempXml.text();
				return result;
			}
			
			protected function bfIncListTxt_changeHandler(event:Event):void
			{
				var temp:String = bfIncListTxt.text;
//				if(temp != null && temp != "" ){
					sourceXML.interceptors.bfIncList = temp;
//				}
			}
			
			protected function afIncListTxt_changeHandler(event:Event):void
			{
				var temp:String = afIncListTxt.text;
//				if(temp != null && temp != "" ){
					sourceXML.interceptors.afIncList = temp;
//				}
				
			}
			
			protected function clientBfIncListTxt_changeHandler(event:Event):void
			{
				var temp:String = clientBfIncListTxt.text;
//				if(temp != null && temp != "" ){
					sourceXML.interceptors.clientBfIncList = temp;
//				}
				
			}
			
			protected function clientAfIncListTxt_changeHandler(event:Event):void
			{
				var temp:String = clientAfIncListTxt.text;
//				if(temp != null && temp != "" ){
					sourceXML.interceptors.clientAfIncList = temp;
//				}
				
			}
			
			protected function addCardBtn_clickHandler(event:MouseEvent):void
			{
				var tempBtnXml:XML = <button id="在此填写按钮ID" label="在此填写按钮名称" toolTip="在此填写按钮提示信息" icon="在此填写按钮图标" ><listeners /></button>;
				if( sourceXML.customCardButton.length()<= 0 ){
					var customCardButtonXML:XML = new XML("<customCardButton />");
					sourceXML.appendChild(customCardButtonXML);
				}
				
				sourceXML.customCardButton.appendChild(tempBtnXml);
				
				cardBtnsDatagrid.invalidateList();
				
			}
			
			protected function musCardBtn_clickHandler(event:MouseEvent):void
			{
				var item:Object = cardBtnsDatagrid.selectedItem;
				if(item != null ){
					var tempXml:XML = item as XML;
					CEPUtils.xmlDeleteNode(tempXml);
					buttonXML = null;
				}
				
			}
			
			protected function addCardLstBtn_clickHandler(event:MouseEvent):void
			{
				var btnObj:Object = cardBtnsDatagrid.selectedItem;
				if( btnObj != null ){
					if( cardButtonXML == null ){
						cardButtonXML = <button id="" label="" toolTip="" icon="" ><listeners /></button>;
					}
					
					var listener:XML = new XML("<listener>在此填写监听器实现类</listener>");
					
					cardButtonXML.listeners.appendChild(listener);
					
					cardLstsDatagrid.invalidateList();
				}else{
					SmartXMessage.show("请先选择一条按钮数据!");
				}
				
			}
			
			protected function musCardLstBtn_clickHandler(event:MouseEvent):void
			{
				var item:Object = cardLstsDatagrid.selectedItem;
				if( item != null ){
					var listenerXml:XML = item as XML;
					CEPUtils.xmlDeleteNode(listenerXml);
					cardLstsDatagrid.invalidateList();
				}
				
			}
			
			protected function cardBtnsDatagrid_clickHandler(event:MouseEvent):void
			{
				var item:Object = cardBtnsDatagrid.selectedItem;
				if(item != null ){
					cardButtonXML = item as XML;
					cardLstsDatagrid.invalidateList();
				}
				
			}
			
			protected function insertBfIncCardTxt_changeHandler(event:Event):void
			{
				var temp:String = insertBfIncCardTxt.text;
//				if(temp != null && temp != "" ){
					sourceXML.interceptors.insertBfIncCard = temp;
//				}
				
			}
			
			protected function insertAfIncCardTxt_changeHandler(event:Event):void
			{
				var temp:String = insertAfIncCardTxt.text;
//				if(temp != null && temp != "" ){
					sourceXML.interceptors.insertAfIncCard = temp;
//				}
				
			}
			
			protected function updateBfIncCardTxt_changeHandler(event:Event):void
			{
				var temp:String = updateBfIncCardTxt.text;
//				if(temp != null && temp != "" ){
					sourceXML.interceptors.updateBfIncCard = temp;
//				}
				
			}
			
			protected function updateAfIncCardTxt_changeHandler(event:Event):void
			{
				var temp:String = updateAfIncCardTxt.text;
//				if(temp != null && temp != "" ){
					sourceXML.interceptors.updateAfIncCard = temp;
//				}
				
			}
			
			protected function clientInsertBfIncCardTxt_changeHandler(event:Event):void
			{
				var temp:String = clientInsertBfIncCardTxt.text;
//				if(temp != null && temp != "" ){
					sourceXML.interceptors.clientInsertBfIncCard = temp;
//				}
				
			}
			
			protected function clientUpdateBfIncCardTxt_changeHandler(event:Event):void
			{
				var temp:String = clientUpdateBfIncCardTxt.text;
//				if(temp != null && temp != "" ){
					sourceXML.interceptors.clientUpdateBfIncCard = temp;
//				}
				
			}
			
			protected function clientUpdateAfIncCardTxt_changeHandler(event:Event):void
			{
				var temp:String = clientUpdateAfIncCardTxt.text;
//				if(temp != null && temp != "" ){
					sourceXML.interceptors.clientUpdateAfIncCard = temp;
//				}
				
			}
			
			protected function clientInsertAfIncCardTxt_changeHandler(event:Event):void
			{
				var temp:String = clientInsertAfIncCardTxt.text;
//				if(temp != null && temp != "" ){
					sourceXML.interceptors.clientInsertAfIncCard = temp;
//				}
				
			}
			
			protected function isMultipleSelectionCB_changeHandler(event:Event):void
			{
				sourceXML.allowMultipleSelection = isMultipleSelectionCB.selected?"true":"false";
				
			}
			
			protected function showOperationTypeCbo_changeHandler(event:ListEvent):void{
				sourceXML.showOperationButtonType = showOperationTypeCbo.selectedItem
												?showOperationTypeCbo.selectedItem.data
												:GlobalConst.STYLETEMPLATE_OPERATION_MENU;
			}
			
			private function addEmbedBtn_clickHandler(event:MouseEvent):void{
				var tempBtnXml:XML = <button id="在此填写按钮ID" label="在此填写按钮名称" 
										toolTip="在此填写按钮提示信息" icon="在此填写按钮图标" ><listeners /></button>;
				if( sourceXML.embedButton.length()<= 0 ){
					var embedButtonXml:XML = new XML("<embedButton />");
					sourceXML.appendChild(embedButtonXml);
				}
				
				sourceXML.embedButton.appendChild(tempBtnXml);
				embedBtnsDatagrid.invalidateList();
			}
			
			private function delEmbedBtn_clickHandler(event:MouseEvent):void{
				var item:Object = embedBtnsDatagrid.selectedItem;
				if(item != null ){
					var tempXml:XML = item as XML;
					CEPUtils.xmlDeleteNode(tempXml);
					embedBtnXml = null;
				}
			}
			
			private function embedBtnsDatagrid_clickHandler(event:MouseEvent):void{
				var item:Object = embedBtnsDatagrid.selectedItem;
				if(item != null ){
					embedBtnXml = item as XML;
					embedLstDatagrid.invalidateList();
				}
			}
			
			private function addEmbedLstBtn_clickHandler(event:MouseEvent):void{
				var btnObj:Object = embedBtnsDatagrid.selectedItem;
				if( btnObj != null ){
					if( embedBtnXml == null )
						embedBtnXml = <button id="" label="" toolTip="" icon="" ><listeners /></button>;
					
					var listener:XML = <listener>在此填写监听器实现类</listener>;
					
					embedBtnXml.listeners.appendChild(listener);
					embedLstDatagrid.invalidateList();
				}else{
					SmartXMessage.show("请先选择一条按钮数据!");
				}
			}
			
			private function musEmbedLstBtn_clickHandler(event:MouseEvent):void{
				var item:Object = embedLstDatagrid.selectedItem;
				if(item != null ){
					var tempXml:XML = item as XML;
					CEPUtils.xmlDeleteNode(tempXml);
					embedBtnXml = null;
				}
			}
			
			private function addDVBtn_clickHandler(event:MouseEvent):void{
				var tempBtnXml:XML = <dataValidator classname="在此填写数据验证器实现类" />;
				if( sourceXML.cardDataValidators.length()<= 0 ){
					var cardDataValidatorsXML:XML = new XML("<cardDataValidators />");
					sourceXML.appendChild(cardDataValidatorsXML);
				}
				
				sourceXML.cardDataValidators.appendChild(tempBtnXml);
				
				dataValidatorDatagrid.invalidateList();
				
			}
			
			private function musDVBtn_clickHandler(event:MouseEvent):void{
				var item:Object = dataValidatorDatagrid.selectedItem;
				if(item != null ){
					var tempXml:XML = item as XML;
					CEPUtils.xmlDeleteNode(tempXml);
				}
				
			}
			
		]]>
	</fx:Script>
	<mx:TabNavigator width="100%" height="100%" id="tabNavigator" resizeToContent="true" creationPolicy="all">
			
			<mx:VBox width="100%" height="100%" label="拦截器" paddingLeft="10">
				<mx:HBox width="100%" height="100%" >
					<mx:Label width="165" text="服务端列表前置拦截器:" />
					<mx:TextInput width="360" id="bfIncListTxt" text="{sourceXML.interceptors.bfIncList}" change="bfIncListTxt_changeHandler(event)" toolTip="服务端前置拦截器实现类" />
				</mx:HBox>
				<mx:HBox width="100%" height="100%" >
					<mx:Label width="165" text="服务端列表后置拦截器:" />
					<mx:TextInput width="360" id="afIncListTxt" text="{sourceXML.interceptors.afIncList}" change="afIncListTxt_changeHandler(event)" toolTip="服务端后置拦截器实现类" />
				</mx:HBox>
				<mx:HBox width="100%" height="100%" >
					<mx:Label width="165" text="客户端列表前置拦截器:" /><mx:TextInput width="360" id="clientBfIncListTxt" text="{sourceXML.interceptors.clientBfIncList}" change="clientBfIncListTxt_changeHandler(event)" toolTip="客户端列表前置拦截器实现类" />
				</mx:HBox>
				<mx:HBox width="100%" height="100%" >
					<mx:Label width="165" text="客户端列表后置拦截器:" /><mx:TextInput width="360" id="clientAfIncListTxt" text="{sourceXML.interceptors.clientAfIncList}" change="clientAfIncListTxt_changeHandler(event)" toolTip="客户端列表后置拦截器实现类" />
				</mx:HBox>
				<mx:HBox width="100%" height="100%" >
					<mx:Label width="165" text="服务端卡片插入前置拦截器:" /><mx:TextInput width="360" id="insertBfIncCardTxt" text="{sourceXML.interceptors.insertBfIncCard}" change="insertBfIncCardTxt_changeHandler(event)" toolTip="服务端卡片插入前置拦截器实现类" />
				</mx:HBox>
				<mx:HBox width="100%" height="100%" >	
					<mx:Label width="165" text="服务端卡片插入后置拦截器:" /><mx:TextInput width="360" id="insertAfIncCardTxt" text="{sourceXML.interceptors.insertAfIncCard}" change="insertAfIncCardTxt_changeHandler(event)" toolTip="服务端卡片插入后置拦截器实现类" />
				</mx:HBox>
				<mx:HBox width="100%" height="100%" >
					<mx:Label width="165" text="客户端卡片插入前置拦截器:" /><mx:TextInput width="360" id="clientInsertBfIncCardTxt" text="{sourceXML.interceptors.clientInsertBfIncCard}" change="clientInsertBfIncCardTxt_changeHandler(event)" toolTip="客户端卡片插入前置拦截器实现类" />
				</mx:HBox>
				<mx:HBox width="100%" height="100%" >	
					<mx:Label width="165" text="客户端卡片插入后置拦截器:" /><mx:TextInput width="360" id="clientInsertAfIncCardTxt" text="{sourceXML.interceptors.clientInsertAfIncCard}" change="clientInsertAfIncCardTxt_changeHandler(event)" toolTip="客户端卡片插入后置拦截器实现类" />
				</mx:HBox>
				<mx:HBox width="100%" height="100%" >
					<mx:Label width="165" text="服务端卡片更新前置拦截器:" /><mx:TextInput width="360" id="updateBfIncCardTxt" text="{sourceXML.interceptors.updateBfIncCard}" change="updateBfIncCardTxt_changeHandler(event)" toolTip="服务端卡片更新前置拦截器实现类" />
				</mx:HBox>
				<mx:HBox width="100%" height="100%" >
					<mx:Label width="165" text="服务端卡片更新后置拦截器:" /><mx:TextInput width="360" id="updateAfIncCardTxt" text="{sourceXML.interceptors.updateAfIncCard}" change="updateAfIncCardTxt_changeHandler(event)" toolTip="服务端卡片更新后置拦截器实现类" />
				</mx:HBox>
				<mx:HBox width="100%" height="100%" >
					<mx:Label width="165" text="客户端卡片更新前置拦截器:" /><mx:TextInput width="360" id="clientUpdateBfIncCardTxt" text="{sourceXML.interceptors.clientUpdateBfIncCard}" change="clientUpdateBfIncCardTxt_changeHandler(event)" toolTip="客户端卡片更新前置拦截器实现类" />
				</mx:HBox>
				<mx:HBox width="100%" height="100%" >
					<mx:Label width="165" text="客户端卡片更新后置拦截器:" /><mx:TextInput width="360" id="clientUpdateAfIncCardTxt" text="{sourceXML.interceptors.clientUpdateAfIncCard}" change="clientUpdateAfIncCardTxt_changeHandler(event)" toolTip="客户端卡片更新后置拦截器实现类" />
				</mx:HBox>
			</mx:VBox>
			
			<mx:VBox width="100%" height="100%" label="列表按钮" >
				<mx:HBox width="100%" >
					<mx:CheckBox id="isMultipleSelectionCB" change="isMultipleSelectionCB_changeHandler(event)" label="列表时是否可多选" selected="{sourceXML.allowMultipleSelection=='true'}" toolTip="列表时是否可多选" />
				</mx:HBox>
				<mx:HBox width="100%">
					<mx:Label text="列表操作按钮显示方式" />
					<mx:ComboBox id="showOperationTypeCbo" change="showOperationTypeCbo_changeHandler(event)" 
								 labelField="name" dataProvider="{showOperationButtonTypeDp}" />
				</mx:HBox>
				<mx:HBox width="100%" horizontalAlign="left" >
					<mx:Label text="列表按钮:" />
					<mx:LinkButton id="addBtn" icon="{AssetsFileLib.addIcon}" width="22" height="22" toolTip="添加列表按钮" click="addBtn_clickHandler(event)"/>
					<mx:LinkButton id="musBtn" icon="{AssetsFileLib.minuseIcon}" width="22" height="22" toolTip="删除列表按钮" click="musBtn_clickHandler(event)"/>
				</mx:HBox>
				<mx:DataGrid width="100%" height="100%" id="btnsDatagrid" editable="true" allowMultipleSelection="false" 
							 dragEnabled="true" dropEnabled="true" dragMoveEnabled="true"
							 dataProvider="{sourceXML.customListButton.button}" click="btnsDatagrid_clickHandler(event)" >
					<mx:columns>
						<mx:DataGridColumn headerText="ID" editable="true" dataField="@id" />
						<mx:DataGridColumn headerText="名称" editable="true" dataField="@label" />
						<mx:DataGridColumn headerText="提示信息" editable="true" dataField="@toolTip" />
						<mx:DataGridColumn headerText="图片路径" editable="true" dataField="@icon" />
					</mx:columns>
				</mx:DataGrid>
				
				<mx:HBox width="100%" horizontalAlign="left" >
					<mx:Label text="监听器:" />
					<mx:LinkButton id="addLstBtn" icon="{AssetsFileLib.addIcon}" width="22" height="22" toolTip="添加监听器" click="addLstBtn_clickHandler(event)"/>
					<mx:LinkButton id="musLstBtn" icon="{AssetsFileLib.minuseIcon}" width="22" height="22" toolTip="删除监听器" click="musLstBtn_clickHandler(event)"/>
				</mx:HBox>
				<mx:DataGrid width="100%" height="100%" id="lstsDatagrid" editable="true" allowMultipleSelection="false" dataProvider="{buttonXML.listeners.listener}" >
					<mx:columns>
						<mx:DataGridColumn id="lstsCol" headerText="实现类" editable="true" dataField="*" labelFunction="lstsColLabelFunction" />
					</mx:columns>
				</mx:DataGrid>
			</mx:VBox>
		
		<mx:VBox width="100%" height="100%" label="列表嵌入式按钮" >
			<mx:HBox width="100%" horizontalAlign="left" >
				<mx:Label text="列表嵌入式按钮:" />
				<mx:LinkButton id="addEmbedBtn" icon="{AssetsFileLib.addIcon}" width="22" height="22" 
							   toolTip="添加" click="addEmbedBtn_clickHandler(event)"/>
				<mx:LinkButton id="delEmbedBtn" icon="{AssetsFileLib.minuseIcon}" width="22" height="22" 
							   toolTip="删除" click="delEmbedBtn_clickHandler(event)"/>
			</mx:HBox>
			<mx:DataGrid width="100%" height="100%" id="embedBtnsDatagrid" editable="true" allowMultipleSelection="false" 
						 dragEnabled="true" dropEnabled="true" dragMoveEnabled="true"
						 dataProvider="{sourceXML.embedButton.button}" click="embedBtnsDatagrid_clickHandler(event)" >
				<mx:columns>
					<mx:DataGridColumn headerText="ID" editable="true" dataField="@id" />
					<mx:DataGridColumn headerText="名称" editable="true" dataField="@label" />
					<mx:DataGridColumn headerText="提示信息" editable="true" dataField="@toolTip" />
					<mx:DataGridColumn headerText="图片路径" editable="true" dataField="@icon" />
				</mx:columns>
			</mx:DataGrid>
			
			<mx:HBox width="100%" horizontalAlign="left" >
				<mx:Label text="监听器:" />
				<mx:LinkButton id="addEmbedLstBtn" icon="{AssetsFileLib.addIcon}" width="22" height="22" 
							   toolTip="添加监听器" click="addEmbedLstBtn_clickHandler(event)"/>
				<mx:LinkButton id="musEmbedLstBtn" icon="{AssetsFileLib.minuseIcon}" width="22" height="22" 
							   toolTip="删除监听器" click="musEmbedLstBtn_clickHandler(event)"/>
			</mx:HBox>
			<mx:DataGrid width="100%" height="100%" id="embedLstDatagrid" editable="true" 
						 allowMultipleSelection="false" dataProvider="{embedBtnXml.listeners.listener}" >
				<mx:columns>
					<mx:DataGridColumn headerText="实现类" editable="true" dataField="*" labelFunction="lstsColLabelFunction" />
				</mx:columns>
			</mx:DataGrid>
		</mx:VBox>
		<mx:VBox width="100%" height="100%" label="卡片属性">
			<mx:TabNavigator width="100%" height="100%">
				<mx:VBox width="100%" height="100%" label="卡片按钮" >
					<mx:HBox width="100%" horizontalAlign="left" >
						<mx:Label text="卡片按钮:" />
						<mx:LinkButton id="addCardBtn" icon="{AssetsFileLib.addIcon}" width="22" height="22" 
									   toolTip="添加卡片按钮" click="addCardBtn_clickHandler(event)"/>
						<mx:LinkButton id="musCardBtn" icon="{AssetsFileLib.minuseIcon}" width="22" height="22" 
									   toolTip="删除卡片按钮" click="musCardBtn_clickHandler(event)"/>
					</mx:HBox>
					<mx:DataGrid width="100%" height="100%" id="cardBtnsDatagrid" editable="true" 
								 dragEnabled="true" dropEnabled="true" dragMoveEnabled="true"
								 allowMultipleSelection="false" dataProvider="{sourceXML.customCardButton.button}" 
								 click="cardBtnsDatagrid_clickHandler(event)" >
						<mx:columns>
							<mx:DataGridColumn headerText="ID" editable="true" dataField="@id" />
							<mx:DataGridColumn headerText="名称" editable="true" dataField="@label" />
							<mx:DataGridColumn headerText="提示信息" editable="true" dataField="@toolTip" />
							<mx:DataGridColumn headerText="图片路径" editable="true" dataField="@icon" />
						</mx:columns>
					</mx:DataGrid>
					<mx:HBox width="100%" horizontalAlign="left" >
						<mx:Label text="监听器:" />
						<mx:LinkButton id="addCardLstBtn" icon="{AssetsFileLib.addIcon}" width="22" height="22" 
									   toolTip="添加监听器" click="addCardLstBtn_clickHandler(event)"/>
						<mx:LinkButton id="musCardLstBtn" icon="{AssetsFileLib.minuseIcon}" width="22" height="22" 
									   toolTip="删除监听器" click="musCardLstBtn_clickHandler(event)"/>
					</mx:HBox>
					<mx:DataGrid width="100%" height="100%" id="cardLstsDatagrid" editable="true" allowMultipleSelection="false" dataProvider="{cardButtonXML.listeners.listener}" >
						<mx:columns>
							<mx:DataGridColumn id="cardLstsCol" headerText="实现类" editable="true" dataField="*" labelFunction="cardLstsColLabelFunction" />
						</mx:columns>
					</mx:DataGrid>
				</mx:VBox>
				
				<mx:VBox width="100%" height="100%" label="数据验证器">
					<mx:HBox width="100%" horizontalAlign="left" >
						<mx:LinkButton id="addDVBtn" icon="{AssetsFileLib.addIcon}" width="22" height="22" 
									   toolTip="添加数据验证器" click="addDVBtn_clickHandler(event)"/>
						<mx:LinkButton id="musDVBtn" icon="{AssetsFileLib.minuseIcon}" width="22" height="22" 
									   toolTip="删除数据验证器" click="musDVBtn_clickHandler(event)"/>
					</mx:HBox>
					<mx:DataGrid width="100%" height="100%" id="dataValidatorDatagrid" editable="true" 
								 allowMultipleSelection="false" dataProvider="{sourceXML.cardDataValidators.dataValidator}" >
						<mx:columns>
							<mx:DataGridColumn headerText="实现类名" editable="true" dataField="@classname" />
						</mx:columns>
					</mx:DataGrid>
				</mx:VBox>
			</mx:TabNavigator>
		</mx:VBox>
		
		
			
	</mx:TabNavigator>
</baseAttr:BaseAttributePanel>