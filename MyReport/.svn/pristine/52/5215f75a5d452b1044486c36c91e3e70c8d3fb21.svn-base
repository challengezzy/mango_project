<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 width="200" height="100%" fontFamily="Simsun" fontSize="12" horizontalAlign="center" 
		  xmlns:design="myreport.design.*"  xmlns:util="myreport.util.*" creationComplete="Init()">
	<!--
	
	Copyright (c), Hunk.Cai
	All rights reserved.
	
	创建人：Hunk.Cai
	修改人：
	
	-->
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			
			import myreport.data.report.Define;
			import myreport.data.report.ReportSettings;
			import myreport.data.report.SubReportRowSetting;
			import myreport.expression.ExpressionEngine;
			import myreport.res.Asset;
			private static var g_Instance:SubReportRowEditor;
			
			public static function get Instance():SubReportRowEditor
			{
				if (g_Instance == null)
				{
					g_Instance = new SubReportRowEditor();
					g_Instance.initialize();
					g_Instance.percentHeight = 100;
					g_Instance.percentWidth = 100;
				}
				return g_Instance;
			}
			private var _Data:SubReportRowSetting;
			private var _Settings:ReportSettings;
			private function Init():void
			{
				if(_Data)
					Refresh();
			}
 
			public function SetData(settings:ReportSettings, item:Object):void
			{
				_Settings = settings;
				_Data = item as SubReportRowSetting;
				
			
				RefreshColumns();
				Refresh();
			}
			
			private function RefreshColumns():void
			{
				var source:Object = myreport.expression.ExpressionEngine.InvokeByData(_Data.SubReportTable,
					_Settings.TableData, _Settings.ParameterData);

				var columns:ArrayCollection = DesignUtil.GetColumnSource(source);
 
				GroupColumn.dataProvider = columns;
				OrderColumn.dataProvider = columns;
				GroupColumn.selectedIndex = -1;
				GroupColumn.text = _Data.GroupColumn;
				OrderColumn.selectedIndex = -1;
				OrderColumn.text = _Data.OrderColumn;
			}
			
			public function Refresh():void
			{
				if(_Data)
				{
					_SubReportParameters.text = _Data.SubReportParameters;
					_SubReportTable.text = _Data.SubReportTable;
					
					GroupColumn.selectedIndex = -1;
					GroupColumn.text = _Data.GroupColumn;
					OrderColumn.selectedIndex = -1;
					OrderColumn.text = _Data.OrderColumn;
					GroupSize.text = _Data.GroupSize.toString();
					Enabled.selected = _Data.GroupEnabled;
				}
			}
			
			private function OnEdit(event:Event):void
			{
				var value:Number;
				if(event.currentTarget == _SubReportParameters)
				{
					EditProperty(Define.PRO_SUB_REPORT_PARAMETERS, _SubReportParameters.text);
				}
				else if(event.currentTarget == _SubReportTable)
				{
					EditProperty(Define.PRO_SUB_REPORT_TABLE, _SubReportTable.text);
					RefreshColumns();
				}
				else if(event.currentTarget == GroupColumn)
				{
					EditProperty(Define.PRO_GROUP_COLUMN, GroupColumn.text);
					
				}
				else if(event.currentTarget == Enabled)
				{
					EditProperty(Define.PRO_GROUP_ENABLED, Enabled.selected);
					
				}
				else if(event.currentTarget == OrderColumn)
				{
					EditProperty(Define.PRO_ORDER_COLUMN, OrderColumn.text);
					
				}
				else if (event.currentTarget == GroupSize)
				{
					value = Number(event.currentTarget.text);
					if (isNaN(value))
						return;
					
					EditProperty(Define.PRO_GROUP_SIZE, value);
					
				}
			}
			private function EditProperty(target:Object, value:Object):void
			{
				var e:DesignEvent = new DesignEvent(DesignEvent.EDIT_PROPERTY, true);
				e.Target = target;
				e.Value = value;
				dispatchEvent(e);
				
			}
			private function ShowExpressionEditor(input:TextInput):void
			{
				ExpressionEditor.Instance.Show(input.text, _Settings, function(value:String):void
				{
					input.text = value;
	 
					if(input == _SubReportParameters)
					{
						EditProperty(Define.PRO_SUB_REPORT_PARAMETERS, _SubReportParameters.text);
					}
					else if(input == _SubReportTable)
					{
						EditProperty(Define.PRO_SUB_REPORT_TABLE, _SubReportTable.text);
						RefreshColumns();
					}
				});
			}
		]]>
	</mx:Script>
	<mx:HBox width="100%" verticalAlign="middle" horizontalGap="0">
		<mx:Label text="子报表数据"/>
		<mx:HRule width="100%"/>
	</mx:HBox>
	<mx:HBox width="90%" verticalAlign="middle" horizontalGap="0">
		<mx:Label text="参数数据"/>
		<mx:TextInput width="100%" id="_SubReportParameters" enter="OnEdit(event)"
					  focusOut="OnEdit(event)"/>
		<util:ToolButton width="23" icon="{Asset.ICON_FUNCTION}" toolTip="表达式编辑器"
						 click="ShowExpressionEditor(_SubReportParameters)"/>
	</mx:HBox>
	<mx:HBox width="90%" verticalAlign="middle" horizontalGap="0">
		<mx:Label text="表格数据"/>
		<mx:TextInput width="100%" id="_SubReportTable" enter="OnEdit(event)"
					  focusOut="OnEdit(event)"/>
		<util:ToolButton width="23" icon="{Asset.ICON_FUNCTION}" toolTip="表达式编辑器"
						 click="ShowExpressionEditor(_SubReportTable)"/>
	</mx:HBox>
	<mx:HBox width="100%" verticalAlign="middle" horizontalGap="0">
		<mx:Label text="子报表分组"/>
		<mx:HRule width="100%"/>
	</mx:HBox>
	<mx:CheckBox label="允许分组" id="Enabled" change="OnEdit(event)"/>
	<mx:HBox verticalAlign="middle" horizontalGap="0">
		<mx:Label text="分组字段"/>
		<mx:ComboBox width="120" editable="true" cornerRadius="0" id="GroupColumn"
					 enter="OnEdit(event)" focusOut="OnEdit(event)" change="OnEdit(event)"
					 fontWeight="normal" paddingLeft="0">
		</mx:ComboBox>
	</mx:HBox>
	<mx:HBox verticalAlign="middle" horizontalGap="0">
		<mx:Label text="分组大小"/>
		<mx:TextInput width="120" id="GroupSize" enter="OnEdit(event)" focusOut="OnEdit(event)"/>
	</mx:HBox>
	<mx:HBox verticalAlign="middle" horizontalGap="0">
		<mx:Label text="排序字段"/>
		<mx:ComboBox width="120" editable="true" cornerRadius="0" id="OrderColumn"
					 enter="OnEdit(event)" focusOut="OnEdit(event)" change="OnEdit(event)"
					 fontWeight="normal" paddingLeft="0">
		</mx:ComboBox>	
	</mx:HBox>

</mx:VBox>
